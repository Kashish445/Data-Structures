Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.

If target is not found in the array, return [-1, -1].

You must write an algorithm with O(log n) runtime complexity.


a = [1,2, 2,3,3,3,4,5,8,9]
x=3
low = 0
high = len(a) - 1
first,floor=-1,-1
while low <= high:
    mid = (low + high) // 2 
    if a[mid]==x:
        first=mid
        high=mid-1
    elif a[mid]<x:
        low=mid+1
    else:
        high=mid-1
print(first)


==========================================================
a = [1,2, 2,3,4,5,8,9]
x=3
low = 0
high = len(a) - 1
last,floor=-1,-1
while low <= high:
    mid = (low + high) // 2 
    if a[mid]==x:
        first=mid
        low=mid+1
    elif a[mid]<x:
        low=mid+1
    else:
        high=mid-1
print(last)
