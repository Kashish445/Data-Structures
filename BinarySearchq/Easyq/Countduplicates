Given a sorted array Arr of size N and a number X, you need to find the number of occurrences of X in Arr.

Example 1:

Input:
N = 7, X = 2
Arr[] = {1, 1, 2, 2, 2, 2, 3}
Output: 4
Explanation: 2 occurs 4 times in the
given array.


class Solution:
    def firstOccurence(self,arr,n,x):
        low=0
        high=n-1
        ans=-1
        while low <=high:
            mid=(low+high)//2
            if arr[mid]==x:
                ans=mid
                high=mid-1
            elif arr[mid]<x:
                low=mid+1
            else:
                high=mid-1
        return ans
        
    def lastOccurence(self,arr,n,x):
        low=0
        high=n-1
        ans=-1
        while low <=high:
            mid=(low+high)//2
            if arr[mid]==x:
                ans=mid
                low=mid+1
            elif arr[mid]<x:
                low=mid+1
            else:
                high=mid-1
        return ans

    def count(self,arr, n, x):
        first=self.firstOccurence(arr,n,x)
        if first==-1:
            return 0
        last=self.lastOccurence(arr,n,x)
        return (last-first)+1
