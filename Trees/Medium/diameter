Given the root of a binary tree, return the length of the diameter of the tree.

The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.

The length of a path between two nodes is represented by the number of edges between them.

 self.k = 0
def height(node: Optional[TreeNode]) -> int:
    if not node:
        return 0
    
    # Compute the height of each subtree
    left_height = height(node.left)
    right_height = height(node.right)
    
    # Update the diameter if the path through the root is larger
    self.k = max(self.k, left_height + right_height)
    
    # Return the height of the node
    return 1 + max(left_height, right_height)

height(root)
return self.k
