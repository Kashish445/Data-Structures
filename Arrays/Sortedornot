Given an array nums, return true if the array was originally sorted in non-decreasing order, then rotated some number of positions (including zero). Otherwise, return false.

There may be duplicates in the original array.

Note: An array A rotated by x positions results in an array B of the same length such that A[i] == B[(i+x) % A.length], where % is the modulo operation.

 

Example 1:

Input: nums = [3,4,5,1,2]
Output: true
Explanation: [1,2,3,4,5] is the original sorted array.
You can rotate the array by x = 3 positions to begin on the the element of value 3: [3,4,5,1,2].



__________________For right rotation -k and left k _________________________
Solution 1:
breaks = 0
l = len(nums)
for i in range(l):
    if nums[i-1] >nums[i]: 
        breaks+=1
if breaks <= 1:
    return True
# else:
return False

Solution 2:
num1=sorted(nums)
for i in range(len(nums)):
    if nums[i:]+nums[:i]==num1:
        return True
return False
